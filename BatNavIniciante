#include <stdio.h>

#define TAMANHO 10
#define NAVIO 3

void inicializarTabuleiro(int tabuleiro[TAMANHO][TAMANHO]) {
    for (int i = 0; i < TAMANHO; i++) {
        for (int j = 0; j < TAMANHO; j++) {
            tabuleiro[i][j] = 0; // Preenche com água
        }
    }
}

int podePosicionar(int tabuleiro[TAMANHO][TAMANHO], int linha, int coluna, int horizontal) {
    for (int i = 0; i < NAVIO; i++) {
        int novaLinha = linha + (horizontal ? 0 : i);
        int novaColuna = coluna + (horizontal ? i : 0);
        
        if (novaLinha >= TAMANHO || novaColuna >= TAMANHO || tabuleiro[novaLinha][novaColuna] == 3) {
            return 0; // Fora dos limites ou sobreposição
        }
    }
    return 1;
}

void posicionarNavio(int tabuleiro[TAMANHO][TAMANHO], int linha, int coluna, int horizontal) {
    if (podePosicionar(tabuleiro, linha, coluna, horizontal)) {
        for (int i = 0; i < NAVIO; i++) {
            int novaLinha = linha + (horizontal ? 0 : i);
            int novaColuna = coluna + (horizontal ? i : 0);
            tabuleiro[novaLinha][novaColuna] = 3; // Posiciona o navio
        }
    }
}

void exibirTabuleiro(int tabuleiro[TAMANHO][TAMANHO]) {
    printf("Tabuleiro de Batalha Naval:\n");
    for (int i = 0; i < TAMANHO; i++) {
        for (int j = 0; j < TAMANHO; j++) {
            printf("%d ", tabuleiro[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int tabuleiro[TAMANHO][TAMANHO];
    
    inicializarTabuleiro(tabuleiro);

    // Posições fixas (podem ser ajustadas conforme necessário)
    posicionarNavio(tabuleiro, 2, 4, 1); // Horizontal
    posicionarNavio(tabuleiro, 5, 7, 0); // Vertical

    exibirTabuleiro(tabuleiro);
    return 0;
}
